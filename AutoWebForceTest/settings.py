# -*- coding: UTF-8 -*-
"""
Django settings for AutoWebForceTest project.

Generated by 'django-admin startproject' using Django 2.2a1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os
from django.conf.global_settings import SESSION_COOKIE_NAME, SESSION_COOKIE_PATH

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)--当前文件夹所在的目录

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'zsq0!xss=l09+_*eu+&^#jt@3f9ly=@9t(+6pb$&g#bqi@9unq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ActivityModel.apps.ActivitymodelConfig',
    'bootstrap3'
    # 'mdeditor'  # 富文本编辑器
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AutoWebForceTest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AutoWebForceTest.wsgi.application'

# Session_Cookies
SESSION_COOKIE_AGE = 36000                            # Session的cookie失效日期（2周）（默认） 60 * 60 * 24 * 7 * 2
CSRF_COOKIE_AGE = 36000                              # cookie失效日期（2周）（默认） 60 * 60 * 24 * 7 * 2

# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'mysql.connector.django',  # 或者使用 django.db.backends.mysql
        'NAME': 'autoworkers',  # 数据库名
        'USER': 'user',
        'PASSWORD': 'user',
        'HOST': 'localhost',
        'PORT': '3306',
    },
    # 'default': {  # 自带的数据库环境
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
}


# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# LANGUAGES = (
#     ('en', ('English')),
#     ('zh-hans', ('中文简体')),
# )

# 翻译文件所在目录，需要手工创建
# LOCALE_PATHS = (
#     os.path.join(BASE_DIR, 'locale'),
# )

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'templates')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),   # 若存放静态文件的static目录在project目录下，则用该定义
]

